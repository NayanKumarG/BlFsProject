package com.bridgelabz.oop.serviceimpl;
import java.io.File;
import java.io.*;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.ParseException;
import java.util.Iterator;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.*;

import com.bridgelabz.oop.model.BookModel;
import com.bridgelabz.oop.service.*;
public class AddressBooksImpl implements AddressBookInf {
	FileWriter writer;
	FileReader reader;
	File file;
	@SuppressWarnings("unchecked")
	@Override
	public void addProfile(BookModel bmodel) {
		try
		{
			file = new File( "/home/user/eclipse-workspace/Oop/"
					+ "src/main/java/com/bridgelabz/oop/repository/addressBook.json");
			reader = new FileReader(file);
			JSONParser parser = new JSONParser();
			JSONArray array = (JSONArray) parser.parse(reader);
			JSONObject object = new JSONObject();
			object.put("UserId", bmodel.getUserId());
			object.put("FirstName", bmodel.getFirstName());
			object.put("LastName", bmodel.getLastName());
			object.put("Address", bmodel.getAddress());
			object.put("City", bmodel.getCity());
			object.put("State", bmodel.getState());
			object.put("ZipCode", bmodel.getZip());
			object.put("PhoneNo", bmodel.getPhoneNo());
			array.add(object);

			writer = new FileWriter(file);
			writer.write( JSONArray.toJSONString(array));

			System.out.println("Details added succefully....");

		} catch (IOException | ParseException e) {
			System.out.println("File not found or wrong directory");
		}



	}

	@Override
	public void dispalyProfile(String user) {
		JSONParser parser = new JSONParser();

		try
		{
			file = new File( "/home/user/eclipse-workspace/Oop/"
					+ "src/main/java/com/bridgelabz/oop/repository/addressBook.json");
			reader = new FileReader(file);
			JSONArray array = (JSONArray) parser.parse(reader);
			Iterator<?> iterator =  array.iterator();
			while(iterator.hasNext())
			{
				JSONObject object = (JSONObject) iterator.next();
				for (Object keys : object.keySet())
				{
					if(user.equals(object.get(keys)))
					{
						System.out.println("------your details---");
						System.out.println("FirstName:"+object.get("FirstName"));
						System.out.println("LastName:"+object.get("LastName"));
						System.out.println("Address:"+object.get("Address"));
						System.out.println("City:"+object.get("City"));
						System.out.println("State:"+object.get("State"));
						System.out.println("ZipCode:"+object.get("ZipCode"));
						System.out.println("PhoneNo:"+object.get("PhoneNo"));
					}
				}
			}

		} catch (FileNotFoundException e) {
			System.out.println("Given file is not found:");
		} catch (IOException e) {
			System.out.println("wrong directory ");
		} catch (ParseException e) {
			System.out.println("Parsing is not possible");
	

	}

	@Override
	public boolean checkUser(BookModel bmodel) {
		JSONParser parser = new JSONParser();

		try
		{
			file = new File( "/home/user/eclipse-workspace/Oop/"
					+ "src/main/java/com/bridgelabz/oop/repository/addressBook.json");
			if(file.exists())
			{
				
			reader = new FileReader(file);
			JSONArray array = (JSONArray) parser.parse(reader);
			Iterator<?> iterator =  array.iterator();
			while(iterator.hasNext())
			{
				JSONObject object = (JSONObject) iterator.next();
				for (Object keys : object.keySet())
				{
					if(bmodel.getUserId().equals(object.get(keys)))
					{
						return true;
					}

				}
			}
			}
			else
			{
			return true;	
			}

		} catch (FileNotFoundException e) {
			System.out.println("Given file is not found:");
		} catch (IOException e) {
			System.out.println("wrong directory ");
		} catch (ParseException e) {
			System.out.println("Parsing is not possible");
		} catch (org.json.simple.parser.ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;

	}

	@Override
	public void removeProfile(String userId1) {
		JSONParser parser = new JSONParser();
		try
		{
			file = new File( "/home/user/eclipse-workspace/Oop/"
					+ "src/main/java/com/bridgelabz/oop/repository/addressBook.json");
			reader = new FileReader(file);
			JSONArray array = (JSONArray) parser.parse(reader);
			Iterator<?> iterator =  array.iterator();
			while(iterator.hasNext())
			{
				JSONObject object = (JSONObject) iterator.next();
				for (Object keys : object.keySet())
				{
					if(userId.equals(object.get(keys)))
					{
						array.remove(object);
					}

				}
			}

			writer = new FileWriter(file);
			writer.write( JSONArray.toJSONString(array));
		} catch (FileNotFoundException e) {
			System.out.println("Given file is not found:");
		} catch (IOException e) {
			System.out.println("wrong directory ");
		} catch (ParseException e) {
			System.out.println("Parsing is not possible");
		}		
	}

	@Override
	public void editProfile(String userId2) {
		JSONParser parser = new JSONParser();

		String choice;
		char c;

		try
		{
			file = new File( "/home/user/eclipse-workspace/Oop/"
					+ "src/main/java/com/bridgelabz/oop/repository/addressBook.json");
			reader = new FileReader(file);
			JSONArray array = (JSONArray) parser.parse(reader);
			Iterator<?> iterator =  array.iterator();
			while(iterator.hasNext())
			{
				JSONObject object = (JSONObject) iterator.next();
				for (Object keys : object.keySet())
				{
					if(userId.equals(object.get(keys)))
					{

						do
						{
							System.out.println("Enter the field to edit:");
							System.out.println("FirstName\n"+"LastName\n"+"Address\n"+"City\n"+"State\n"+"ZipCode\n"+"PhoneNo");
							choice = Utility.inputWord();

							System.out.println("Enter the new value:");
							String newValue = Utility.inputWord();

							System.out.println("Do you want to edit other fields Y/y or N/n");
							c= Utility.inputWord().charAt(0);
						}while(c =='Y' || c == 'y');

						writer = new FileWriter(file);
						writer.write( JSONArray.toJSONString(array));

					}
					else
					{
						System.out.println("User id not found:");
					}
				}
			}

		}catch (FileNotFoundException e) {
			System.out.println("Given file is not found:");
		} catch (IOException e) {
			System.out.println("wrong directory ");
		} catch (ParseException e) {
			System.out.println("Parsing is not possible");
		}

	}		
	

}
